openapi: 3.0.1
info:
  title: MandG - GraphAPI 1.0
  description: |-
    MandG - GraphAPI is a RESTful web API that enables you to access Microsoft Cloud service resources. After you register your app in APIGEE and get authentication tokens for a user or service, you can make requests to the MandG - Graph API.
  termsOfService: https://www.mandg.com/footer/terms-and-conditions
  contact:
    email: eddie.rozajac@mandg.com    
  version: v1
servers:
  - url: https://graph.microsoft.com/v1.0 
paths:
  /$batch:
    post:
      description: Poll Endpoint -- Get room events using batch
      tags:
        - Calendar
      summary: poll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PollRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PollRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
  /me/calendarview:
    get:
      tags:
        - Calendar
      summary: search myReservation
      description: It’s called to retrieve reservations for a given user and period.
      operationId: myReservation
      parameters:
        - in: header
          name: Prefer
          schema:
            type: string
            default: outlook.body-content-type=text
          required: true      
        - name: $select
          in: query
          description: provide default values for select parameters
          required: true
          schema:
            type: string
            default: subject,organizer,start,end,iCalUId,attendees,onlineMeeting,isOnlineMeeting,body
        - name: startDateTime
          in: query
          description: provide start date time - [2022-11-30T13:33:50.93Z] 
          required: true
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: provide end date time - [2022-11-30T23:00:00Z] 
          required: true
          schema:
            type: string
            format: date-time
        - name: top
          in: query
          description: provide top value to list the number of records - [1000]
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation
  /users/{userId}/calendarview:
    get:
      description: Poll Endpoint -- Get room events using batch
      tags:
        - Calendar
      summary: get details before create / update
      operationId: calendarview
      parameters:
        - name: userId
          in: path
          description: UPN Id or emailId
          required: true
          schema:
            type: integer
            format: int64  
        - in: header
          name: Prefer
          schema:
            type: string
            default: outlook.body-content-type=text
          required: true             
        - name: $select
          in: query
          description: provide default values for select parameters
          required: false
          schema:
            type: string
            default: subject,organizer,start,end,iCalUId,attendees,onlineMeeting,isOnlineMeeting,body
        - name: startDateTime
          in: query
          description: provide start date time - [2022-11-30T13:33:50.93Z] 
          required: false
          schema:
            type: string
            format: date-time
        - name: endDateTime
          in: query
          description: provide end date time - [2022-11-30T23:00:00Z] 
          required: false
          schema:
            type: string
            format: date-time
        - name: $filter
          in: query
          description: give query to filter the details
          required: false
          schema:
            type: string
            format: string 
        - name: top
          in: query
          description: provide top value to list the number of records - [1000]
          required: false
          schema:
            type: integer
            format: int32
          
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'       
  /users/{userId}/calendar/events:
    post:
      description: Poll Endpoint -- Get room events using batch
      tags:
        - Calendar
      summary: create
      parameters:
        - name: userId
          in: path
          description: UPN Id or emailId
          required: true
          schema:
            type: string
            format: string       
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventMultiLocRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateEventMultiLocRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateEventMultiLocRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                
  /users/{userId}/calendar/events/{eventID}:
    patch:
      description: Poll Endpoint -- Get room events using batch
      tags:
        - Calendar
      summary: update
      parameters:
        - name: userId
          in: path
          description: UPN Id or emailId
          required: true
          schema:
            type: string
            format: string  
        - name: eventID
          in: path
          description: event details
          required: true
          schema:
            type: string
            format: string            
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventMultiLocRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateEventMultiLocRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreateEventMultiLocRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'                          
    delete:
      description: Poll Endpoint -- Get room events using batch
      tags:
        - Calendar
      summary: delete
      parameters:
        - name: userId
          in: path
          description: UPN Id or emailId
          required: true
          schema:
            type: string
            format: string  
        - name: eventID
          in: path
          description: event details
          required: true
          schema:
            type: string
            format: string            
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'            
  /users:
    get:
      tags:
        - Calendar
      summary: user search
      description: It’s called to user search for a given user and period.
      parameters:
        - name: select
          in: query
          description: provide default values for select parameters
          required: true
          schema:
            type: string
            default: displayName,givenName,surname,mail
        - name: $filter
          in: query
          description: provide default values for select parameters
          required: true
          schema:
            type: string
        - name: $count
          in: query
          description: provide top value to list the number of records - [1000]
          required: true
          schema:
            type: boolean
        - name: top
          in: query
          description: provide top value to list the number of records - [1000]
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful operation          
  /me/calendar/getSchedule:
    post:
      description: Get schedule
      tags:
        - Calendar
      summary: get schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollRequestModel'
          text/json:
            schema:
              $ref: '#/components/schemas/PollRequestModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PollRequestModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CalendarResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'   
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        countryOrRegion:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
      additionalProperties: false
    PollInsideRequests:
      type: object
      properties:
        id:
          type: string
          nullable: false
        method:
          type: string
          nullable: false
          default: GET
        url:
          type: string
          nullable: false          
      additionalProperties: false      
    Attendee:
      type: object
      properties:
        emailAddress:
          $ref: '#/components/schemas/EmailAddress'
        type:
          type: string
          nullable: true
      additionalProperties: false
    Body:
      type: object
      properties:
        contentType:
          type: string
          nullable: true
        content:
          type: string
          nullable: true
      additionalProperties: false
    CalendarResponse:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/value'
          nullable: true
      additionalProperties: false
    Coordinates:
      type: object
      properties:
        latitude:
          type: string
          nullable: true
        longitude:
          type: string
          nullable: true
      additionalProperties: false
    CreateEventMultiLocRequestModel:
      type: object
      properties:
        subject:
          type: string
          nullable: true
        body:
          $ref: '#/components/schemas/Body'
        start:
          $ref: '#/components/schemas/Start'
        end:
          $ref: '#/components/schemas/End'
        location:
          $ref: '#/components/schemas/Location'
        locations:
          type: array
          items:
            $ref: '#/components/schemas/Locations'
          nullable: true
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/Attendee'
          nullable: true
        allowNewTimeProposals:
          type: boolean
      additionalProperties: false
    CreateEventRecurrentRequestModel:
      type: object
      properties:
        subject:
          type: string
          nullable: true
        body:
          $ref: '#/components/schemas/Body'
        start:
          $ref: '#/components/schemas/Start'
        end:
          $ref: '#/components/schemas/End'
        recurrence:
          $ref: '#/components/schemas/Recurrence'
        location:
          $ref: '#/components/schemas/Location'
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/Attendee'
          nullable: true
        allowNewTimeProposals:
          type: boolean
      additionalProperties: false
    CreateEventRequestModel:
      type: object
      properties:
        subject:
          type: string
          nullable: true
        body:
          $ref: '#/components/schemas/Body'
        start:
          $ref: '#/components/schemas/Start'
        end:
          $ref: '#/components/schemas/End'
        location:
          $ref: '#/components/schemas/Location'
        attendees:
          type: array
          items:
            $ref: '#/components/schemas/Attendee'
          nullable: true
        allowNewTimeProposals:
          type: boolean
        transactionId:
          type: string
          nullable: true
      additionalProperties: false
    PollRequestModel:
      type: object
      properties:
        requests:
          type: array
          items:
            $ref: '#/components/schemas/PollInsideRequests'
          nullable: true
      additionalProperties: false
    EmailAddress:
      type: object
      properties:
        address:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    End:
      type: object
      properties:
        dateTime:
          type: string
          format: date-time
        timeZone:
          type: string
          nullable: true
      additionalProperties: false
    Location:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
      additionalProperties: false
    Locations:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
        coordinates:
          $ref: '#/components/schemas/Coordinates'
      additionalProperties: false
    Pattern:
      type: object
      properties:
        type:
          type: string
          nullable: true
        interval:
          type: integer
          format: int32
        daysOfWeek:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    Range:
      type: object
      properties:
        type:
          type: string
          nullable: true
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
      additionalProperties: false
    Recurrence:
      type: object
      properties:
        pattern:
          $ref: '#/components/schemas/Pattern'
        range:
          $ref: '#/components/schemas/Range'
      additionalProperties: false
    Start:
      type: object
      properties:
        dateTime:
          type: string
          format: date-time
        timeZone:
          type: string
          nullable: true
      additionalProperties: false
    value:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        id:
          type: string
          nullable: true
      additionalProperties: false
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid      
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []
